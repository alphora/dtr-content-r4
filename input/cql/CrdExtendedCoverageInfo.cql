library CrdExtendedCoverageInfo

using FHIR version '4.0.1'
// TODO: update to use USCore directly
//using USCore version '3.1.1'

//include USCoreCommon
include FHIRHelpers version '4.1.000'
include QuestionnaireRouter

context Patient

define function ExtensionPriorAuthNeeded(coverageId System.String, covered System.String, priorAuthRequired System.String, coverageAssertionId System.String, requestReferenceString System.String, serviceRequestCode System.Code, codeValue System.String, detailText System.String, qualification System.String, warningOrInfo System.String)
returns FHIR.Extension:
  FHIR.Extension {
    "url": FHIR.uri { "value": 'http://hl7.org/fhir/us/davinci-crd/StructureDefinition/ext-coverage-information' },
    "extension": ({ 
      // payer coverage
      "CoverageExtension"(coverageId),

      // 'covered', 'not-covered', or 'conditional' (https://build.fhir.org/ig/HL7/davinci-crd/ValueSet-coverageInfo.html)
      "CoveredExtension"(covered),

      // 'auth-needed', 'no-auth', or 'conditional' (https://build.fhir.org/ig/HL7/davinci-crd/ValueSet-coveragePaDetail.html)
      "PriorAuthNeededExtension"(priorAuthRequired),

      // system generated id
      "CoverageAssertionIdExtension"(coverageAssertionId),

      // today's date
      "TodaysDateExtension"(),

      // questionnaire canonical extension based on the service request code
      // requires a valueset per canonical questionnaire
      "QuestionnaireExtension"(priorAuthRequired, serviceRequestCode),

      // service request id
      "DependencyExtension"(requestReferenceString),

      // detail code, warning or info, and qualification
      "DetailExtension"(codeValue, detailText, qualification, warningOrInfo),

      // Always 'admin' and 'clinical'
      // 'admin', 'clinical', 'both', or 'conditional' (https://hl7.org/fhir/us/davinci-crd/ValueSet-AdditionalDocumentation.html)
      // "DocNeeded"('admin'),
      // "DocNeeded"('clinical'),
      "DocNeeded"('both')
    }) Extension where not IsNull(Extension)
  }

define function "CoverageExtension"(coverageId System.String)
returns FHIR.Extension:
  if IsNull(coverageId) then null as FHIR.Extension
  else
    FHIR.Extension {
      "url": FHIR.uri { "value": 'coverage' },
      "value": FHIR.Reference {
        "reference": FHIR.string { "value": 'Coverage/' + coverageId }
      }
    }

define function "CoveredExtension"(covered System.String)
returns FHIR.Extension:
  FHIR.Extension {
    "url": FHIR.uri { "value": 'covered' },
    "value": FHIR.code { "value": covered }
  }

define function "PriorAuthNeededExtension"(priorAuthRequired System.String)
returns FHIR.Extension:
  FHIR.Extension {
    "url": FHIR.uri { "value": 'pa-needed' },
    "value": FHIR.code { "value": priorAuthRequired }
  }

define function "CoverageAssertionIdExtension"(coverageAssertionId System.String)
returns FHIR.Extension:
  // system generated id, either sent by payor or generated by shim
  FHIR.Extension {
    "url": FHIR.uri { "value": 'coverage-assertion-id' },
    "value": FHIR.string { "value": if IsNull(coverageAssertionId) or (coverageAssertionId = '') then 'N/A' else coverageAssertionId }
  }

define function "TodaysDateExtension"()
returns FHIR.Extension:
  FHIR.Extension {
    "url": FHIR.uri { "value": 'date' },
    "value": FHIR.date { "value": Today() }
  }

define function "QuestionnaireExtension"(priorAuthRequired System.String, procedureCode System.Code)
returns FHIR.Extension:
  if priorAuthRequired in { 'auth-needed' } then
    if not IsNull(QuestionnaireRouter.GetAdaptiveQuestionnairePlanDefinition(procedureCode)) then 
      FHIR.Extension {
        "url": FHIR.uri { "value": 'questionnaire' },
        "value": FHIR.canonical { "value": QuestionnaireRouter.GetAdaptiveQuestionnairePlanDefinition(procedureCode) } 
      }
    else null as FHIR.Extension
  else null as FHIR.Extension

// code = auth-needed|no-auth|gold-card|not-covered, warningOrInfo = Warning|info, qualification = {open text entry}
define function "DetailExtension"(codeValue System.String, detailText System.String, qualification System.String, warningOrInfo System.String)
returns FHIR.Extension:
  FHIR.Extension {
    "url": FHIR.uri { "value": 'detail' },
    "extension": {
      if (codeValue = 'auth-needed') then "DetailCodeAuthRequired"(detailText)
      else if (codeValue = 'no-auth') then "DetailCodeAuthNotRequired"(detailText)
      else if (codeValue = 'gold-card') then "DetailCodeGoldCard"(detailText)
      else if (codeValue = 'not-covered') then "DetailCodeNoCoverage"(detailText)
      else if (codeValue = 'coverage-info') then "DetailCodeCoverageInfo"(detailText)
      else "DetailCode"('http://hl7.org/fhir/us/davinci-crd/CodeSystem/temp', codeValue, 'Unknown display', detailText),

      FHIR.Extension {
        "url": FHIR.uri { "value": 'value' },
        "value": FHIR.string { "value": warningOrInfo }
      },
      FHIR.Extension {
        "url": FHIR.uri { "value": 'qualification' },
        "value": FHIR.string { "value": qualification }
      }
    }
  }

define function "DetailCode"(system System.String, value System.String, displayText System.String, text System.String)
returns FHIR.Extension:
  FHIR.Extension {
    "url": FHIR.uri { "value": 'code' },
    "value": FHIR.CodeableConcept { 
      "coding": {
        FHIR.Coding {
          system: FHIR.uri { "value": system },
          code: FHIR.code { "value": value },
          display: FHIR.string { "value": displayText }
        }
      },
      "text": FHIR.string { "value": text }
    }
  }

define function "DetailCodeAuthRequired"(displayText System.String)
returns FHIR.Extension:
  "DetailCode"('http://hl7.org/fhir/us/davinci-crd/CodeSystem/temp', 'auth-needed', 'Prior Authorization Needed', displayText)

define function "DetailCodeAuthNotRequired"(displayText System.String)
returns FHIR.Extension:
  "DetailCode"('http://hl7.org/fhir/us/davinci-crd/CodeSystem/temp', 'no-auth', 'No Prior Authorization', displayText)

define function "DetailCodeGoldCard"(displayText System.String)
returns FHIR.Extension:
  "DetailCode"('http://hl7.org/fhir/us/davinci-crd/CodeSystem/temp', 'gold-card', 'Gold Card', displayText)

define function "DetailCodeNoCoverage"(displayText System.String)
returns FHIR.Extension:
  "DetailCode"('http://hl7.org/fhir/us/davinci-crd/CodeSystem/temp', 'not-covered', 'Not covered', displayText)

define function "DetailCodeCoverageInfo"(displayText System.String)
returns FHIR.Extension:
  "DetailCode"('http://hl7.org/fhir/us/davinci-crd/CodeSystem/temp', 'coverage-info', 'Coverage Information', displayText)

define function "DependencyExtension"(requestReferenceString System.String)
returns FHIR.Extension:
  if IsNull(requestReferenceString) then null as FHIR.Extension
  else
    FHIR.Extension {
      "url": FHIR.uri { "value": 'dependency' },
      "value": FHIR.Reference {
        "reference": FHIR.string { "value": requestReferenceString }
      }
    }

define function "DocNeeded"(valueCode System.String)
returns FHIR.Extension:
  FHIR.Extension {
    "url": FHIR.uri { "value": 'doc-needed' },
    "value": FHIR.code {
      "value": valueCode
    }
  }